name: Publish

# on release created (tag auto created)
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*.*.*' # i.e. 1.0.0, 20.15.10

jobs:

  bump-version-file:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup git
      run: |
          git config user.name "GitHub Actions"
          git config user.email "<>"
    - name: Bump version
      run: |
        echo "Update version to ${{github.ref_name}}"
        echo "${{github.ref_name}}" > VERSION
        # TODO: update CHANGELOG.md with release notes
    - name: Commit version and move tag
      run: |
        git add VERSION
        git commit -m "auto: update VERSION file"
        git push origin master
        git tag -fa ${{github.ref_name}}
        git push origin master --tags
    

  release-python-package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Build python package
      run: |
        python -m pip install -U wheel twine
        python -m pip wheel . --no-deps --wheel-dir dist
        twine upload -r testpypi dist/*
        twine upload dist/*


#  release-github-pages:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Setup Python 3.9
#        uses: actions/setup-python@v3
#        with:
#          python-version: 3.9
#      - uses: actions/cache@v3
#        with:
#          path: ${{ env.pythonLocation }}
#          key: ${{ runner.os }}-python-3.9-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'setup.cfg') }}-docs
#          restore-keys: |
#            ${{ runner.os }}-python-3.9-
#            ${{ runner.os }}-python-
#            ${{ runner.os }}-
#      - name: Install dependencies
#        run: python -m pip install -e .[docs]
#      - name: Build and publish docs
#        run: |
#          git fetch --all
#          # lazydocs
#          python -m mkdocs build --config-file docs/mkdocs.yml
#          python -m mkdocs gh-deploy --config-file docs/mkdocs.yml --force
